// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package localservices is a generated GoMock package.
package localservices

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockICutter is a mock of ICutter interface.
type MockICutter struct {
	ctrl     *gomock.Controller
	recorder *MockICutterMockRecorder
}

// MockICutterMockRecorder is the mock recorder for MockICutter.
type MockICutterMockRecorder struct {
	mock *MockICutter
}

// NewMockICutter creates a new mock instance.
func NewMockICutter(ctrl *gomock.Controller) *MockICutter {
	mock := &MockICutter{ctrl: ctrl}
	mock.recorder = &MockICutterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICutter) EXPECT() *MockICutterMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockICutter) Generate() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate")
	ret0, _ := ret[0].(string)
	return ret0
}

// Generate indicates an expected call of Generate.
func (mr *MockICutterMockRecorder) Generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockICutter)(nil).Generate))
}

// MockmyRandInterface is a mock of myRandInterface interface.
type MockmyRandInterface struct {
	ctrl     *gomock.Controller
	recorder *MockmyRandInterfaceMockRecorder
}

// MockmyRandInterfaceMockRecorder is the mock recorder for MockmyRandInterface.
type MockmyRandInterfaceMockRecorder struct {
	mock *MockmyRandInterface
}

// NewMockmyRandInterface creates a new mock instance.
func NewMockmyRandInterface(ctrl *gomock.Controller) *MockmyRandInterface {
	mock := &MockmyRandInterface{ctrl: ctrl}
	mock.recorder = &MockmyRandInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockmyRandInterface) EXPECT() *MockmyRandInterfaceMockRecorder {
	return m.recorder
}

// Read mocks base method.
func (m *MockmyRandInterface) Read(arg0 []byte) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockmyRandInterfaceMockRecorder) Read(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockmyRandInterface)(nil).Read), arg0)
}
